snippet template "Shell template applying lots of good practices"
#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

#/ Usage:
#/ Description:
#/ Examples:
#/ Options:
#/   --help: Display this help message
usage() { grep '^#/' "\$0" | cut -c4- ; exit 0 ; }
expr "$*" : ".*--help" > /dev/null && usage

readonly LOG_FILE="/tmp/$(basename "\$0").log"
info()    { echo "[INFO]    $*" | tee -a "$LOG_FILE" >&2 ; }
warning() { echo "[WARNING] $*" | tee -a "$LOG_FILE" >&2 ; }
error()   { echo "[ERROR]   $*" | tee -a "$LOG_FILE" >&2 ; }
fatal()   { echo "[FATAL]   $*" | tee -a "$LOG_FILE" >&2 ; exit 1 ; }

cleanup() {
    # Remove temporary files
    # Restart services
    # ...
    $1
}


${0:Do Stuff}

if [[ "${BASH_SOURCE[0]}" = "\$0" ]]; then
    trap cleanup EXIT
    # Script goes here
    # ...
fi
endsnippet

snippet createMap "Map based on mktemp"
prefix=$(basename -- "\$0")
mapdir=$(mktemp -dt "${prefix}")
trap 'rm -r ${mapdir}' EXIT

put() {
  [ "$#" != 3 ] && exit 1
  mapname=\$1; key=\$2; value=\$3
  [ -d "${mapdir}/${mapname}" ] || mkdir "${mapdir}/${mapname}"
  echo "$value" >"${mapdir}/${mapname}/${key}"
}

get() {
  [ "$#" != 2 ] && exit 1
  mapname=\$1; key=\$2
  cat "${mapdir}/${mapname}/${key}"
}

$0
endsnippet
